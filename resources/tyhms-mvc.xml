<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="com.techyolk.hms.controller" />

	<!-- registers all of Spring's standard post-processors for annotation-based 
		configuration -->
	<context:annotation-config />

	<!-- Configures the @Controller programming model : The mvc:annotationDriven 
		tag essentially sets you your Spring context to allow for dispatching requests 
		to Controllers. -->
	<mvc:annotation-driven enable-matrix-variables="true" />
	<!-- <mvc:resources location="" mapping=""/> -->
	
	<!-- It specifies that the Springâ€™s dispatcher servlet will resolve logical 
		view names to physical view pages by appending /pages/ before the names and 
		.jsp after the names. -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/pages/" p:suffix=".jsp" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages" />



</beans>
